{"version":3,"file":"content.min.js","sources":["../src/content.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder editor\n *\n * @module      core_reportbuilder/editor\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as pageSelectors from 'local_custompage/local/selectors';\nimport {createPageModal} from 'local_custompage/local/repository/modals';\n\nlet initialized = false;\n\n/**\n * Initialise editor and all it's modules\n */\nexport const init = () => {\n  // Ensure we only add our listeners once (can be called multiple times by mustache template).\n  if (initialized) {\n    return;\n  }\n\n  // Add event handlers to generic report editor elements.\n  document.addEventListener('click', event => {\n\n    // Edit report details modal.\n    const pageEdit = event.target.closest(pageSelectors.actions.pageEdit);\n    if (pageEdit) {\n      event.preventDefault();\n\n      const pageModal = createPageModal(event.target, getString('editpagedetails', 'local_custompage'),\n        pageEdit.dataset.pageId);\n      pageModal.addEventListener(pageModal.events.FORM_SUBMITTED, () => {\n        getString('pageupdated', 'local_custompage')\n          .then(addToast)\n          .then(() => {\n            return window.location.reload();\n          })\n          .catch(Notification.exception);\n      });\n      pageModal.show();\n    }\n  });\n\n  initialized = true;\n};\n"],"names":["initialized","document","addEventListener","event","pageEdit","target","closest","pageSelectors","actions","preventDefault","pageModal","dataset","pageId","events","FORM_SUBMITTED","then","addToast","window","location","reload","catch","Notification","exception","show"],"mappings":"g3CAgCIA,aAAc,gBAKE,KAEdA,cAKJC,SAASC,iBAAiB,SAASC,cAG3BC,SAAWD,MAAME,OAAOC,QAAQC,cAAcC,QAAQJ,aACxDA,SAAU,CACZD,MAAMM,uBAEAC,WAAY,2BAAgBP,MAAME,QAAQ,mBAAU,kBAAmB,oBAC3ED,SAASO,QAAQC,QACnBF,UAAUR,iBAAiBQ,UAAUG,OAAOC,gBAAgB,yBAChD,cAAe,oBACtBC,KAAKC,YACLD,MAAK,IACGE,OAAOC,SAASC,WAExBC,MAAMC,sBAAaC,cAExBZ,UAAUa,WAIdvB,aAAc"}